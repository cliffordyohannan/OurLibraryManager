/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CatogoryEditPanel.java
 *
 * Created on May 22, 2011, 3:19:59 AM
 */

package org.our.lm.ui.master;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import org.our.lm.masters.*;
import org.our.lm.masters.BookCategory;

import org.our.lm.db.QueryManager;
import org.our.lm.masters.IncomeCatogory;
import org.our.lm.ui.LMMainPanel;

/**
 *
 * @author CLIFFORD
 */
public class CatogoryEditPanel extends javax.swing.JPanel {

    /** Creates new form CatogoryEditPanel */
    QueryManager querymanager;
    LMMainPanel lmmp;
    public CatogoryEditPanel(LMMainPanel lMMainPanel,QueryManager qm) {
        lmmp=lMMainPanel;
        querymanager=qm;
        initComponents();
        
        //combo_Cat.removeAllItems();
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        combo_Cat = new javax.swing.JComboBox();
        txt_Catogory = new javax.swing.JTextField();
        bt_Save = new javax.swing.JButton();
        lbl_Msg = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        combo_bookCategory = new javax.swing.JComboBox();
        txt_BookCategory = new javax.swing.JTextField();
        bt_BookCategory_Save = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(588, 100));
        setMinimumSize(new java.awt.Dimension(588, 100));
        setPreferredSize(new java.awt.Dimension(588, 100));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Income Catogory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.setOpaque(false);

        bt_Save.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bt_Save.setText("Save");
        bt_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_Cat, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(txt_Catogory, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_Cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Catogory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Save))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Book Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        bt_BookCategory_Save.setText("Save");
        bt_BookCategory_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_BookCategory_SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_bookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(txt_BookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_BookCategory_Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_bookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_BookCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_BookCategory_Save))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Msg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SaveActionPerformed
        this.selectCatogoryForUpdate();
        this.setIncomeCategory();
        txt_Catogory.setText("");
    }//GEN-LAST:event_bt_SaveActionPerformed

    private void bt_BookCategory_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_BookCategory_SaveActionPerformed
        this.getBookCategoryForUpdate();
        this.setBookCategory();
        txt_BookCategory.setText("");
    }//GEN-LAST:event_bt_BookCategory_SaveActionPerformed
    private void selectCatogoryForUpdate()    {
        if(txt_Catogory.getText().equals(""))
            lbl_Msg.setText("Please Enter a valid catogory ");
        else
        {
            IncomeCatogory catogory=new IncomeCatogory();
            switch(combo_Cat.getSelectedIndex())
            {
                case 0:
                     catogory.setCAT_1(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,1);
                     break;
                case 1:
                     catogory.setCAT_2(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,2);
                     break;
                case 2:
                     catogory.setCAT_3(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,3);
                     break;
                case 3:
                     catogory.setCAT_4(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,4);
                     break;
                case 4:
                     catogory.setCAT_5(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,5);
                     break;
                case 5:
                     catogory.setCAT_6(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,6);
                     break;
                case 6:
                     catogory.setCAT_7(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,7);
                     break;
                case 7:
                     catogory.setCAT_8(txt_Catogory.getText());
                     querymanager.UpdateIncomeCatogory(catogory,8);
                     break; 
                case 8:
                    catogory.setCAT_9(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,9);
                    break;
                case 9:
                    catogory.setCAT_10(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,10);
                    break;
                case 10:    
                    catogory.setCAT_11(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,11);
                    break;
                case 11:
                    catogory.setCAT_12(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,12);
                    break;
                case 12:
                    catogory.setCAT_13(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,13);
                    break;
                case 13:
                    catogory.setCAT_14(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,14);
                    break;
                case 14:
                    catogory.setCAT_15(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,15);
                    break;
                case 15:
                    catogory.setCAT_16(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,16);
                    break;
                case 16:
                    catogory.setCAT_17(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,17);
                    break;
                case 17:
                    catogory.setCAT_18(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,18);
                case 18:
                    catogory.setCAT_19(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,19);
                    break;
            
                case 19:
                    catogory.setCAT_20(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,20);
                    break;
                case 20:
                    catogory.setCAT_21(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,21);
                    break;
                case 21:
                    catogory.setCAT_22(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,22);
                    break;
                case 22:
                    catogory.setCAT_23(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,23);
                    break;
                case 23:
                    catogory.setCAT_24(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,24);
                    break;
                case 24:
                    catogory.setCAT_25(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,25);
                    break;
                case 25:
                   catogory.setCAT_26(txt_Catogory.getText());
                   querymanager.UpdateIncomeCatogory(catogory,26);
                   break;
                case 26:
                    catogory.setCAT_27(txt_Catogory.getText());
                    querymanager.UpdateIncomeCatogory(catogory,27);
                    break;
            }

        }



    }
    
    public IncomeCatogory getCategoryFromResultSet()    {
        ResultSet rs=querymanager.getIncomeCatogories();
        IncomeCatogory catogory=new IncomeCatogory();
        try
        {

            while(rs.next())
            {
                catogory.setCAT_1(rs.getString("cat1"));catogory.setCAT_2(rs.getString("cat2"));catogory.setCAT_3(rs.getString("cat3"));
                catogory.setCAT_4(rs.getString("cat4"));catogory.setCAT_5(rs.getString("cat5"));catogory.setCAT_6(rs.getString("cat6"));
                catogory.setCAT_7(rs.getString("cat7"));catogory.setCAT_8(rs.getString("cat8"));catogory.setCAT_9(rs.getString("cat9"));
                catogory.setCAT_10(rs.getString("cat10"));catogory.setCAT_11(rs.getString("cat11"));catogory.setCAT_12(rs.getString("cat12"));
                catogory.setCAT_13(rs.getString("cat13"));catogory.setCAT_14(rs.getString("cat14"));catogory.setCAT_15(rs.getString("cat15"));
                catogory.setCAT_16(rs.getString("cat16"));catogory.setCAT_17(rs.getString("cat17"));catogory.setCAT_18(rs.getString("cat18"));
                catogory.setCAT_19(rs.getString("cat19"));catogory.setCAT_20(rs.getString("cat20"));catogory.setCAT_21(rs.getString("cat21"));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return catogory;
    }
  public void setIncomeCategory()
  {
      IncomeCatogory ic  = getCategoryFromResultSet();
      combo_Cat.removeAllItems();
      combo_Cat.addItem(ic.getCAT_1());combo_Cat.addItem(ic.getCAT_2());combo_Cat.addItem(ic.getCAT_3());combo_Cat.addItem(ic.getCAT_4());
      combo_Cat.addItem(ic.getCAT_5());combo_Cat.addItem(ic.getCAT_6());combo_Cat.addItem(ic.getCAT_7());combo_Cat.addItem(ic.getCAT_8());
      combo_Cat.addItem(ic.getCAT_9());combo_Cat.addItem(ic.getCAT_10());combo_Cat.addItem(ic.getCAT_11());combo_Cat.addItem(ic.getCAT_12());
      combo_Cat.addItem(ic.getCAT_13());combo_Cat.addItem(ic.getCAT_14());combo_Cat.addItem(ic.getCAT_15());combo_Cat.addItem(ic.getCAT_16());
      combo_Cat.addItem(ic.getCAT_17());combo_Cat.addItem(ic.getCAT_18());combo_Cat.addItem(ic.getCAT_19());combo_Cat.addItem(ic.getCAT_20());
      combo_Cat.addItem(ic.getCAT_21());combo_Cat.addItem(ic.getCAT_22());combo_Cat.addItem(ic.getCAT_23());combo_Cat.addItem(ic.getCAT_24());
      
  }
  
    //*********************** *******************************************************************************************
    //=============================================================================================================
    /*Book categories are taken in to db from here
    * here i create a database table for storing categories
    * name of the table is mastertable
    * in this table primary key is type:this assign different categories ie.type =1 for income categories
    * type=2 means book categories
    * cat1-cat24 colums are here to store our different categories
    * 
    */
    //=============================================================================================================
    //taking user value from ui and assigning value to different categories and update it
    public void getBookCategoryForUpdate(){
        if(txt_BookCategory.getText().equals(""))
            lbl_Msg.setText("Please Enter a vslid category");
        else
        {
            //String cat=null;
            BookCategory bc= new BookCategory();
            System.out.println("Selected index :"+combo_bookCategory.getSelectedIndex());
            switch(combo_bookCategory.getSelectedIndex())
            {
                
                case 0:
                    bc.setCAT_1(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,1);
                    break;
               case 1:
                    bc.setCAT_2(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,2);
                    break;
                case 2:
                    bc.setCAT_3(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,3);
                    break;
                case 3:
                    bc.setCAT_4(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,4);
                    break;
                case 4:
                    bc.setCAT_5(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,5);
                    break;
                case 5:
                    bc.setCAT_6(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,6);
                    break;
                case 6:
                    bc.setCAT_7(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,7);
                    break;
                case 7:
                    bc.setCAT_8(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,8);
                    break;
                case 8:
                    bc.setCAT_9(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,9);
                    break;
                case 9:
                    bc.setCAT_10(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,10);
                    break;
                case 10:
                    bc.setCAT_11(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,11);
                    break;
                case 11:
                    bc.setCAT_12(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,12);
                    break;
                case 12:
                    bc.setCAT_13(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,13);
                    break;
                case 13:
                    bc.setCAT_14(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,14);
                    break;
                case 14:
                    bc.setCAT_15(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,15);
                    break;
                case 15:
                    bc.setCAT_16(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,16);
                    break;
                 case 16:
                    bc.setCAT_17(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,17);
                    break;
                case 17:
                    bc.setCAT_18(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,18);
                    break;
                case 18:
                    bc.setCAT_19(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,19);
                    break;
                case 19:
                    bc.setCAT_20(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,20);
                    break;
                case 20:
                    bc.setCAT_21(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,21);
                    break;
                case 21:
                    bc.setCAT_22(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,22);
                    break;
                case 22:
                    bc.setCAT_23(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,23);
                    break;
                case 23:
                    bc.setCAT_24(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,24);
                    break;
                case 24:
                    bc.setCAT_25(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,25);
                    break;
                case 25:
                    bc.setCAT_26(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,26);
                    break;
                case 26:
                    bc.setCAT_27(txt_BookCategory.getText());
                    querymanager.updateBookCategory(bc,27);
                    break;
                
            }
        }
    }
    //taking stored categories from db
    public BookCategory getBookCategory()    {
        BookCategory bc = new BookCategory();
        ResultSet rs = querymanager.getBookCategories();
        try{
            while(rs.next())
            {
                bc.setCAT_1(rs.getString("cat1"));bc.setCAT_2(rs.getString("cat2"));bc.setCAT_3(rs.getString("cat3"));
                bc.setCAT_4(rs.getString("cat4"));bc.setCAT_5(rs.getString("cat5"));bc.setCAT_6(rs.getString("cat6"));
                bc.setCAT_7(rs.getString("cat7"));bc.setCAT_8(rs.getString("cat8"));bc.setCAT_9(rs.getString("cat9"));
                bc.setCAT_10(rs.getString("cat10"));bc.setCAT_11(rs.getString("cat11"));bc.setCAT_12(rs.getString("cat12"));
                bc.setCAT_13(rs.getString("cat13"));bc.setCAT_14(rs.getString("cat14"));bc.setCAT_15(rs.getString("cat15"));
                bc.setCAT_16(rs.getString("cat16"));bc.setCAT_17(rs.getString("cat17"));bc.setCAT_18(rs.getString("cat18"));
                bc.setCAT_19(rs.getString("cat19"));bc.setCAT_20(rs.getString("cat20"));bc.setCAT_21(rs.getString("cat21"));
            }
        }
        catch(Exception e)
        {
            
        }
        return bc;
    }
    //setting book categories in combo_bookCategory in the category edit panel
    public void setBookCategory(){
        combo_bookCategory.removeAllItems();
        BookCategory bc = this.getBookCategory();
        combo_bookCategory.addItem(bc.getCAT_1());combo_bookCategory.addItem(bc.getCAT_2());combo_bookCategory.addItem(bc.getCAT_3());combo_bookCategory.addItem(bc.getCAT_4());
        combo_bookCategory.addItem(bc.getCAT_5());combo_bookCategory.addItem(bc.getCAT_6());combo_bookCategory.addItem(bc.getCAT_7());combo_bookCategory.addItem(bc.getCAT_8());
        combo_bookCategory.addItem(bc.getCAT_9());combo_bookCategory.addItem(bc.getCAT_10());combo_bookCategory.addItem(bc.getCAT_11());combo_bookCategory.addItem(bc.getCAT_12());
        combo_bookCategory.addItem(bc.getCAT_13());combo_bookCategory.addItem(bc.getCAT_14());combo_bookCategory.addItem(bc.getCAT_15());combo_bookCategory.addItem(bc.getCAT_16());
        combo_bookCategory.addItem(bc.getCAT_17());combo_bookCategory.addItem(bc.getCAT_18());combo_bookCategory.addItem(bc.getCAT_19());combo_bookCategory.addItem(bc.getCAT_20());
        combo_bookCategory.addItem(bc.getCAT_21());combo_bookCategory.addItem(bc.getCAT_22());combo_bookCategory.addItem(bc.getCAT_23());combo_bookCategory.addItem(bc.getCAT_24());
    }
            
   // ******************************************************************************************************************
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_BookCategory_Save;
    private javax.swing.JButton bt_Save;
    private javax.swing.JComboBox combo_Cat;
    private javax.swing.JComboBox combo_bookCategory;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbl_Msg;
    private javax.swing.JTextField txt_BookCategory;
    private javax.swing.JTextField txt_Catogory;
    // End of variables declaration//GEN-END:variables

}
