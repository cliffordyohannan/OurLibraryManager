/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditIncomePanel.java
 *
 * Created on May 21, 2011, 12:04:00 PM
 */

package org.our.lm.ui;
import org.our.lm.*;

import org.our.lm.db.QueryManager;
import org.our.lm.masters.*;
import java.sql.ResultSet;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.*;
import java.awt.Color;
        
/**
 *
 * @author CLIFFORD
 */
public class EditIncomePanel extends javax.swing.JPanel {

    /** Creates new form EditIncomePanel */
    LMMainPanel  lmmp;
    QueryManager querymanager;
    IncomeCatogory category;
    
    public EditIncomePanel(LMMainPanel lMMainPanel,QueryManager queryManager) {
        lmmp=lMMainPanel;
        
        querymanager=queryManager;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IncomeSearchResultTableWindow = new javax.swing.JDialog();
        jScrollPane8 = new javax.swing.JScrollPane();
        table_IncomeResult = new javax.swing.JTable();
        bt_OkInIncomeTable = new javax.swing.JButton();
        bt_CancelInIncomeTable = new javax.swing.JButton();
        lbl_errorInIncomeResultTable = new javax.swing.JLabel();
        IncomeEdit = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        txt_SearchKeyInIncomeEdit = new javax.swing.JTextField();
        bt_GoInIncomeEdit = new javax.swing.JButton();
        lbl_SearchErrorIncome = new javax.swing.JLabel();
        combo_SearchKeyInIncomeEdit = new javax.swing.JComboBox();
        Income13 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        txt_receivedFrom1 = new javax.swing.JTextField();
        combo_CategoryId1 = new javax.swing.JComboBox();
        txt_amount1 = new javax.swing.JTextField();
        lbl_receiptNo1 = new javax.swing.JLabel();
        lbl_ErrorInIncome1 = new javax.swing.JLabel();
        txt_Date = new javax.swing.JTextField();
        txt_description1 = new javax.swing.JTextField();
        lbl_errorInEditIncome = new javax.swing.JLabel();
        bt_SaveInIncomeNew1 = new javax.swing.JButton();
        bt_CancelInIncomeNew1 = new javax.swing.JButton();

        IncomeSearchResultTableWindow.setTitle("Income Search Result");
        IncomeSearchResultTableWindow.setAlwaysOnTop(true);
        IncomeSearchResultTableWindow.setMinimumSize(new java.awt.Dimension(700, 300));
        IncomeSearchResultTableWindow.setModal(true);
        IncomeSearchResultTableWindow.setResizable(false);

        table_IncomeResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Receipt Number", "Date", "Received From", "Income Category", "Description", "Amount"
            }
        ));
        jScrollPane8.setViewportView(table_IncomeResult);

        bt_OkInIncomeTable.setBorderPainted(false);
        bt_OkInIncomeTable.setContentAreaFilled(false);
        bt_OkInIncomeTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_OkInIncomeTableActionPerformed(evt);
            }
        });

        bt_CancelInIncomeTable.setBorderPainted(false);
        bt_CancelInIncomeTable.setContentAreaFilled(false);

        javax.swing.GroupLayout IncomeSearchResultTableWindowLayout = new javax.swing.GroupLayout(IncomeSearchResultTableWindow.getContentPane());
        IncomeSearchResultTableWindow.getContentPane().setLayout(IncomeSearchResultTableWindowLayout);
        IncomeSearchResultTableWindowLayout.setHorizontalGroup(
            IncomeSearchResultTableWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IncomeSearchResultTableWindowLayout.createSequentialGroup()
                .addGroup(IncomeSearchResultTableWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IncomeSearchResultTableWindowLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lbl_errorInIncomeResultTable, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_OkInIncomeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(bt_CancelInIncomeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IncomeSearchResultTableWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)))
                .addContainerGap())
        );
        IncomeSearchResultTableWindowLayout.setVerticalGroup(
            IncomeSearchResultTableWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IncomeSearchResultTableWindowLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(IncomeSearchResultTableWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_errorInIncomeResultTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_CancelInIncomeTable, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                    .addComponent(bt_OkInIncomeTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap())
        );

        setBackground(new java.awt.Color(255, 255, 255));

        IncomeEdit.setBackground(new java.awt.Color(255, 255, 255));
        IncomeEdit.setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel12.setOpaque(false);

        bt_GoInIncomeEdit.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_GoInIncomeEdit.setText("Go");
        bt_GoInIncomeEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_GoInIncomeEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_GoInIncomeEditActionPerformed(evt);
            }
        });

        combo_SearchKeyInIncomeEdit.setFont(new java.awt.Font("Tahoma", 0, 12));
        combo_SearchKeyInIncomeEdit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Receipt Number", "Name", "Category" }));
        combo_SearchKeyInIncomeEdit.setOpaque(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(lbl_SearchErrorIncome, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                        .addGap(311, 311, 311))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(combo_SearchKeyInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_SearchKeyInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(bt_GoInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_SearchKeyInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_SearchKeyInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_GoInIncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_SearchErrorIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Income13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Income13.setOpaque(false);

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel58.setText("Date");

        jLabel70.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel70.setText("Reciept No");

        jLabel77.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel77.setText("Received From  *");

        jLabel78.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel78.setText("Catogory");

        jLabel79.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel79.setText("Description");

        jLabel80.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel80.setText("Amount *");

        combo_CategoryId1.setFont(new java.awt.Font("Tahoma", 0, 12));
        combo_CategoryId1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admission Fee", "Monthly Collection", "Donation", "Librarian Allavance", "News Paper Donation", "Commision(Book Price)", "Grant(Student Corner)", "Grant(PSC)", "Grant(Seminar)", "Donation(Book)", "Donation(Pythrekothsavam)", "Donation(Annual Day)" }));
        combo_CategoryId1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combo_CategoryId1.setOpaque(false);

        lbl_receiptNo1.setBackground(new java.awt.Color(0, 0, 0));

        bt_SaveInIncomeNew1.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_SaveInIncomeNew1.setText("Save");
        bt_SaveInIncomeNew1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_SaveInIncomeNew1.setMaximumSize(new java.awt.Dimension(60, 25));
        bt_SaveInIncomeNew1.setMinimumSize(new java.awt.Dimension(60, 25));
        bt_SaveInIncomeNew1.setPreferredSize(new java.awt.Dimension(60, 25));
        bt_SaveInIncomeNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SaveInIncomeNew1ActionPerformed(evt);
            }
        });

        bt_CancelInIncomeNew1.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_CancelInIncomeNew1.setText("Cancel");
        bt_CancelInIncomeNew1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_CancelInIncomeNew1.setMaximumSize(new java.awt.Dimension(60, 25));
        bt_CancelInIncomeNew1.setMinimumSize(new java.awt.Dimension(60, 25));
        bt_CancelInIncomeNew1.setPreferredSize(new java.awt.Dimension(60, 25));
        bt_CancelInIncomeNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_CancelInIncomeNew1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Income13Layout = new javax.swing.GroupLayout(Income13);
        Income13.setLayout(Income13Layout);
        Income13Layout.setHorizontalGroup(
            Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Income13Layout.createSequentialGroup()
                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Income13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel70)
                            .addComponent(jLabel58)
                            .addComponent(jLabel77)
                            .addComponent(jLabel79))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_receiptNo1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                            .addGroup(Income13Layout.createSequentialGroup()
                                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_receivedFrom1)
                                    .addComponent(txt_description1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Income13Layout.createSequentialGroup()
                                        .addComponent(jLabel78)
                                        .addGap(18, 18, 18)
                                        .addComponent(combo_CategoryId1, 0, 151, Short.MAX_VALUE))
                                    .addGroup(Income13Layout.createSequentialGroup()
                                        .addComponent(jLabel80)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_amount1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))))
                            .addComponent(txt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Income13Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(lbl_ErrorInIncome1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel81))
            .addGroup(Income13Layout.createSequentialGroup()
                .addComponent(lbl_errorInEditIncome, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Income13Layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(bt_SaveInIncomeNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(bt_CancelInIncomeNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        Income13Layout.setVerticalGroup(
            Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Income13Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(txt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Income13Layout.createSequentialGroup()
                        .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel70)
                                .addComponent(lbl_receiptNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39))
                    .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_receivedFrom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel77)
                        .addComponent(jLabel78)
                        .addComponent(combo_CategoryId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel79)
                    .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel80)
                        .addComponent(txt_amount1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_description1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lbl_errorInEditIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(lbl_ErrorInIncome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Income13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_CancelInIncomeNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_SaveInIncomeNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout IncomeEditLayout = new javax.swing.GroupLayout(IncomeEdit);
        IncomeEdit.setLayout(IncomeEditLayout);
        IncomeEditLayout.setHorizontalGroup(
            IncomeEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IncomeEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IncomeEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Income13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        IncomeEditLayout.setVerticalGroup(
            IncomeEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IncomeEditLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Income13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IncomeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_GoInIncomeEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_GoInIncomeEditActionPerformed
        String SearchKey=null;
        if(txt_SearchKeyInIncomeEdit.getText().equals("")) {
            ColourMessage("Please enter a key for searching",0,lbl_SearchErrorIncome);
        } else {
            ColourMessage("",0,lbl_SearchErrorIncome);
            if(combo_SearchKeyInIncomeEdit.getSelectedItem().equals("Receipt Number")) {
                SearchKey=txt_SearchKeyInIncomeEdit.getText();
                ResultSet rs=querymanager.SearchIncome(SearchKey,0);
                this.setvaluesOnIncomeEditWindow(rs);

            }else
                if(combo_SearchKeyInIncomeEdit.getSelectedItem().equals("Name")) {
                    SearchKey=txt_SearchKeyInIncomeEdit.getText();
                    ResultSet rs=querymanager.SearchIncome(SearchKey,1);
                    this.setValuesOnIncomeSearchResultTable(rs);
                    IncomeSearchResultTableWindow.setVisible(true);

                } else {
                SearchKey=txt_SearchKeyInIncomeEdit.getText();
                int key=this.getCatogoryIdFromCatogory(SearchKey);
                ResultSet rs=querymanager.SearchIncome(""+key,2);
                this.setValuesOnIncomeSearchResultTable(rs);
                IncomeSearchResultTableWindow.setVisible(true);


                }
        }
}//GEN-LAST:event_bt_GoInIncomeEditActionPerformed
   
    private void setValuesOnIncomeSearchResultTable(ResultSet rs)    {
        System.out.println("In Values in income result table");
        try
        {
                    int i=0;
                    while(rs.next())
                    {
                            table_IncomeResult.setValueAt(rs.getString("receiptno"),i,0);
                            table_IncomeResult.setValueAt(rs.getString("date"), i, 1);
                            table_IncomeResult.setValueAt(rs.getString("receiveddfrom"), i, 2);
                            table_IncomeResult.setValueAt(this.setCatogoryByValue(rs.getInt("categoryid")), i, 3);
                            table_IncomeResult.setValueAt(rs.getString("description"), i, 4);
                            table_IncomeResult.setValueAt(rs.getString("amount"), i, 5);
                            i++;
                    }
                    rs.close();
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
    private void bt_SaveInIncomeNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SaveInIncomeNew1ActionPerformed
        boolean mandatory=false;
        if(txt_receivedFrom1.getText().equals(""))
            mandatory=true;
        if(txt_amount1.getText().equals(""))
            mandatory=true;
        else {
            try {
                int amount=Integer.parseInt(txt_amount1.getText());
            } catch(Exception e) {
                mandatory=true;
            }
        }
        if(mandatory) {
            ColourMessage("Some of the mandatory fields were not filled. Please review your input", 0,lbl_errorInEditIncome);

        } else {
            Income income=new Income();
            income.setDate(txt_Date.getText());income.setReceiptNo(lbl_receiptNo1.getText());income.setReceivedFrom(txt_receivedFrom1.getText());
            income.setCategoryId(""+this.getCatogoryIdFromCatogory(""+combo_CategoryId1.getSelectedItem()));income.setDescription(txt_description1.getText());
            income.setAmount(txt_amount1.getText());
            int ret=querymanager.UpdateIncome(income);
            switch(ret) {
                case 0:
                    ColourMessage("Incorrect date value",0,lbl_errorInEditIncome);
                    break;
                case 1:
                    this.setBlankOnIncomeEditWindow();
                    ColourMessage("Succesfully added ...",1,lbl_errorInEditIncome);
                    break;
            }


        }
    }//GEN-LAST:event_bt_SaveInIncomeNew1ActionPerformed
    private String getCurrentDate()                                      {
           Date date=new Date();
           String Output=null;
           SimpleDateFormat formater=new SimpleDateFormat("yyyy.MM.dd");
           Output=formater.format(date);
           return Output;

       }
    private void ColourMessage(String msg,int msgType,JLabel lbl)        {
                switch(msgType)
                {
                            case 0:
                                        lbl.setForeground(Color.red);
                                        lbl.setText(msg);
                                        break;
                            case 1:
                                        lbl.setForeground(Color.BLUE);
                                        lbl.setText(msg);

                }
    }
    private void clearTable(JTable tablename,int rowcount,int columcount){
        for(int i=0;i<rowcount;i++)
        for(int j=0;j<columcount;j++)
            tablename.setValueAt("",i, j);

    }
    private void bt_CancelInIncomeNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_CancelInIncomeNew1ActionPerformed
        lmmp.showHomePanel();
        this.setBlankOnIncomeEditWindow();
        lbl_SearchErrorIncome.setText("");
        lbl_errorInEditIncome.setText("");
        txt_SearchKeyInIncomeEdit.setText("");
}//GEN-LAST:event_bt_CancelInIncomeNew1ActionPerformed
public void clearwindow()
{
    this.setBlankOnIncomeEditWindow();
    lbl_SearchErrorIncome.setText("");
    lbl_errorInEditIncome.setText("");
    txt_SearchKeyInIncomeEdit.setText("");

}
    private void bt_OkInIncomeTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_OkInIncomeTableActionPerformed
        if(table_IncomeResult.getSelectedRow()<0)
            ColourMessage("Please Select a row",0 ,lbl_errorInIncomeResultTable);
        else
            if((String)table_IncomeResult.getValueAt(table_IncomeResult.getSelectedRow(),0)!=null) {
                String receiptNo=(String)table_IncomeResult.getValueAt(table_IncomeResult.getSelectedRow(),0);
                ResultSet rs=querymanager.SearchIncome(receiptNo, 0);
                this.setvaluesOnIncomeEditWindow(rs);
                IncomeSearchResultTableWindow.setVisible(false);
            }

            else {
            ColourMessage("Please select a valid row", 0, lbl_errorInIncomeResultTable);
            }
    }//GEN-LAST:event_bt_OkInIncomeTableActionPerformed
    private void setvaluesOnIncomeEditWindow(ResultSet rs)           {
        try
        {
            while(rs.next())
            {
                txt_Date.setText(rs.getString("date"));lbl_receiptNo1.setText(rs.getString("receiptno"));
                txt_receivedFrom1.setText(rs.getString("receiveddfrom"));combo_CategoryId1.setSelectedItem(this.setCatogoryByValue(rs.getInt("categoryid")));
                txt_description1.setText(rs.getString("description"));txt_amount1.setText(rs.getString("amount"));
            }
            rs.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

    }
    //0.Admission Fee, 1.Monthly Collection, 2.Donation, 3.Librarian Allavance, 4.News Paper Donation,
    // 5.Commision(Book Price),6.Grant(Student Corner),
    private String setCatogoryByValue(int id)                        {
       String catogory=null;
       category=this.getIncomeCatogoriesFromResultSet();



       if(id==0)
            catogory=category.getCAT_1();
       else if(id==1)
            catogory=category.getCAT_2();
       else if(id==2)
            catogory=category.getCAT_3();
       else if(id==3)
            catogory=category.getCAT_4();
       else if(id==4)
            catogory=category.getCAT_5();
       else if(id==5)
            catogory=category.getCAT_6();
       else if(id==6)
            catogory=category.getCAT_7();
       else if(id==7)
           catogory=category.getCAT_8();
       else if(id==8)
            catogory=category.getCAT_9();
       else if(id==9)
            catogory=category.getCAT_10();
       else if(id==10)
            catogory=category.getCAT_11();
       else if(id==11)
            catogory=category.getCAT_12();
        else if(id == 12)
            catogory=category.getCAT_13();
       else if(id==13)
            catogory=category.getCAT_14();
       else if(id==14)
            catogory=category.getCAT_15();
       else if(id==15)
            catogory=category.getCAT_16();
       else if(id==16)
            catogory=category.getCAT_17();
       else if(id==17)
            catogory=category.getCAT_18();
       else if(id==18)
            catogory=category.getCAT_19();
       else if(id==19)
           catogory=category.getCAT_20();
       else if(id==20)
            catogory=category.getCAT_21();
       else if(id==21)
            catogory=category.getCAT_22();
       else if(id==22)
            catogory=category.getCAT_23();
       else if(id==23)
            catogory=category.getCAT_24();
       else if(id==24)
            catogory=category.getCAT_25();
       else if(id==25)
            catogory=category.getCAT_26();
       else if(id==26)
            catogory=category.getCAT_27();

        return  catogory;
    }
    private int getCatogoryIdFromCatogory(String SearchKey)          {
            int id=0;
            category=this.getIncomeCatogoriesFromResultSet();
            String SEARCH_KEY=  SearchKey.toUpperCase();
            //System.out.println("Key:"+SearchKey+"\nUpper:"+SEARCH_KEY);
            if(SEARCH_KEY.equals(category.getCAT_1()))
                id=0;
            else if(SEARCH_KEY.equals(category.getCAT_2()))
                id=1;
            else if(SEARCH_KEY.equals(category.getCAT_3()))
                id=2;
            else if(SEARCH_KEY.equals(category.getCAT_4()))
                id=3;
            else if(SEARCH_KEY.equals(category.getCAT_5()))
                id=4;
            else if(SEARCH_KEY.equals(category.getCAT_6()))
                id=5;
            else if(SEARCH_KEY.equals(category.getCAT_7()))
                id=6;
            else if(SEARCH_KEY.equals(category.getCAT_8()))
                id=7;
            else if(SEARCH_KEY.equals(category.getCAT_9()))
                id=8;
            else if(SEARCH_KEY.equals(category.getCAT_10()))
                id=9;
            else if(SEARCH_KEY.equals(category.getCAT_11()))
                id=10;
            else if(SEARCH_KEY.equals(category.getCAT_12()))
                id=11;
            else if(SEARCH_KEY.equals(category.getCAT_13()))
                id=12;
            else if(SEARCH_KEY.equals(category.getCAT_14()))
                id=13;
            else if(SEARCH_KEY.equals(category.getCAT_15()))
                id=14;
            else if(SEARCH_KEY.equals(category.getCAT_16()))
                id=15;
            else if(SEARCH_KEY.equals(category.getCAT_17()))
                id=16;
            else if(SEARCH_KEY.equals(category.getCAT_18()))
                id=17;
            else if(SEARCH_KEY.equals(category.getCAT_19()))
                id=18;
            else if(SEARCH_KEY.equals(category.getCAT_20()))
                id=19;
            else if(SEARCH_KEY.equals(category.getCAT_21()))
                id=20;
            else if(SEARCH_KEY.equals(category.getCAT_22()))
                id=21;
            else if(SEARCH_KEY.equals(category.getCAT_23()))
                id=22;
            else if(SEARCH_KEY.equals(category.getCAT_24()))
                id=23;
            else if(SEARCH_KEY.equals(category.getCAT_25()))
                id=24;
            else if(SEARCH_KEY.equals(category.getCAT_26()))
                id=25;
            else if(SEARCH_KEY.equals(category.getCAT_27()))
                id=26;

            return id;
    }
    private IncomeCatogory getIncomeCatogoriesFromResultSet(){
       IncomeCatogory catogory=new IncomeCatogory();
       ResultSet rs=querymanager.getIncomeCatogories();
       try
       {
           while(rs.next())
           {
               catogory.setCAT_1(rs.getString("cat1"));catogory.setCAT_2(rs.getString("cat2"));catogory.setCAT_3(rs.getString("cat3"));
               catogory.setCAT_4(rs.getString("cat4"));catogory.setCAT_5(rs.getString("cat5"));catogory.setCAT_6(rs.getString("cat6"));
               catogory.setCAT_7(rs.getString("cat7"));catogory.setCAT_8(rs.getString("cat8"));catogory.setCAT_9(rs.getString("cat9"));
               catogory.setCAT_10(rs.getString("cat10"));catogory.setCAT_11(rs.getString("cat11"));catogory.setCAT_12(rs.getString("cat12"));
               catogory.setCAT_13(rs.getString("cat13"));catogory.setCAT_14(rs.getString("cat14"));catogory.setCAT_15(rs.getString("cat15"));
               catogory.setCAT_16(rs.getString("cat16"));catogory.setCAT_17(rs.getString("cat17"));catogory.setCAT_18(rs.getString("cat18"));
               catogory.setCAT_19(rs.getString("cat19"));catogory.setCAT_20(rs.getString("cat20"));catogory.setCAT_21(rs.getString("cat21"));
               catogory.setCAT_22(rs.getString("cat22"));catogory.setCAT_23(rs.getString("cat23"));catogory.setCAT_24(rs.getString("cat24"));
               catogory.setCAT_25(rs.getString("cat25"));catogory.setCAT_26(rs.getString("cat26"));catogory.setCAT_27(rs.getString("cat27"));

           }
       }
       catch(Exception e)
       {
           e.printStackTrace();
       }
       return catogory;
   }
    public void UpdateIncomeCatogory()
    {
        category=this.getIncomeCatogoriesFromResultSet();
        combo_CategoryId1.setFont(new java.awt.Font("Tahoma", 0, 12));
        combo_CategoryId1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { category.getCAT_1(),category.getCAT_2(), category.getCAT_3(), category.getCAT_4(), category.getCAT_5(), category.getCAT_6(), category.getCAT_7(), category.getCAT_8(), category.getCAT_9(), category.getCAT_10(), category.getCAT_11(), category.getCAT_12() ,category.getCAT_13(),category.getCAT_14(),category.getCAT_15(),category.getCAT_16(),category.getCAT_17(),category.getCAT_18(), category.getCAT_19(), category.getCAT_20(), category.getCAT_21(), category.getCAT_22() ,category.getCAT_23(),category.getCAT_24(),category.getCAT_25(),category.getCAT_26(),category.getCAT_27()}));
    }
    private void setBlankOnIncomeEditWindow()                        {
            txt_Date.setText("");lbl_receiptNo1.setText("");txt_receivedFrom1.setText("");txt_description1.setText("");txt_amount1.setText("");txt_SearchKeyInIncomeEdit.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Income13;
    private javax.swing.JPanel IncomeEdit;
    private javax.swing.JDialog IncomeSearchResultTableWindow;
    private javax.swing.JButton bt_CancelInIncomeNew1;
    private javax.swing.JButton bt_CancelInIncomeTable;
    private javax.swing.JButton bt_GoInIncomeEdit;
    private javax.swing.JButton bt_OkInIncomeTable;
    private javax.swing.JButton bt_SaveInIncomeNew1;
    private javax.swing.JComboBox combo_CategoryId1;
    private javax.swing.JComboBox combo_SearchKeyInIncomeEdit;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbl_ErrorInIncome1;
    private javax.swing.JLabel lbl_SearchErrorIncome;
    private javax.swing.JLabel lbl_errorInEditIncome;
    private javax.swing.JLabel lbl_errorInIncomeResultTable;
    private javax.swing.JLabel lbl_receiptNo1;
    private javax.swing.JTable table_IncomeResult;
    private javax.swing.JTextField txt_Date;
    private javax.swing.JTextField txt_SearchKeyInIncomeEdit;
    private javax.swing.JTextField txt_amount1;
    private javax.swing.JTextField txt_description1;
    private javax.swing.JTextField txt_receivedFrom1;
    // End of variables declaration//GEN-END:variables

}
