/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BookSubscriptionPanel.java
 *
 * Created on May 21, 2011, 10:38:01 AM
 */

package org.our.lm.ui;

import org.our.lm.db.QueryManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.our.lm.*;
import java.awt.Color;
import java.util.Calendar;
import javax.swing.*;
/**
 *
 * @author CLIFFORD
 */
public class BookSubscriptionPanel extends javax.swing.JPanel {

    /** Creates new form BookSubscriptionPanel */
    QueryManager querymanager;
    LMMainPanel lmmp;
    public BookSubscriptionPanel(LMMainPanel lMMainPanel,QueryManager queryManager) {
        querymanager=queryManager;
        lmmp=lMMainPanel;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReturnBookDetails = new javax.swing.JDialog();
        jScrollPane12 = new javax.swing.JScrollPane();
        bookReturnTable = new javax.swing.JTable();
        bt_OkInBookReturn = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        txt_BookIdCirculation = new javax.swing.JTextField();
        lbl_BookNameCirculation = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        txt_MemberIdCirculation = new javax.swing.JTextField();
        lbl_MemberNameCirculation = new javax.swing.JLabel();
        lbl_DateReturnCirculation = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        lbl_bookCountCirculation = new javax.swing.JLabel();
        bt_DeatailsCirculation = new javax.swing.JButton();
        jLabel97 = new javax.swing.JLabel();
        bt_SaveCirculation = new javax.swing.JButton();
        bt_CancelCirculation = new javax.swing.JButton();
        lbl_ErrorBookCirculation = new javax.swing.JLabel();

        ReturnBookDetails.setAlwaysOnTop(true);
        ReturnBookDetails.setMinimumSize(new java.awt.Dimension(600, 300));

        bookReturnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Book Id", "Book Name", "Member Id", "Subscribed Date"
            }
        ));
        jScrollPane12.setViewportView(bookReturnTable);

        bt_OkInBookReturn.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_OkInBookReturn.setText("Ok");
        bt_OkInBookReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_OkInBookReturnActionPerformed(evt);
            }
        });
        bt_OkInBookReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_OkInBookReturnKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ReturnBookDetailsLayout = new javax.swing.GroupLayout(ReturnBookDetails.getContentPane());
        ReturnBookDetails.getContentPane().setLayout(ReturnBookDetailsLayout);
        ReturnBookDetailsLayout.setHorizontalGroup(
            ReturnBookDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnBookDetailsLayout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(bt_OkInBookReturn)
                .addContainerGap(99, Short.MAX_VALUE))
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );
        ReturnBookDetailsLayout.setVerticalGroup(
            ReturnBookDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnBookDetailsLayout.createSequentialGroup()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(bt_OkInBookReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setMaximumSize(new java.awt.Dimension(634, 348));
        jPanel19.setMinimumSize(new java.awt.Dimension(634, 348));

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Book Circulation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel20.setMaximumSize(new java.awt.Dimension(634, 348));
        jPanel20.setMinimumSize(new java.awt.Dimension(634, 348));
        jPanel20.setOpaque(false);

        jLabel84.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel84.setText("Book Id *");

        jLabel86.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel86.setText("Book Name ");

        jLabel87.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel87.setText("Member Id *");

        jLabel89.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel89.setText("Member Name");

        jLabel90.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel90.setText("Date Of Return");

        txt_BookIdCirculation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_BookIdCirculationFocusLost(evt);
            }
        });

        txt_MemberIdCirculation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MemberIdCirculationActionPerformed(evt);
            }
        });
        txt_MemberIdCirculation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_MemberIdCirculationFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel90)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_DateReturnCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel84)
                            .addComponent(jLabel86)
                            .addComponent(jLabel87)
                            .addComponent(jLabel89))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_MemberNameCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_MemberIdCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_BookNameCirculation, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                                    .addComponent(jLabel93)
                                    .addComponent(txt_BookIdCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(txt_BookIdCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel86)
                            .addComponent(jLabel93))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel87)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel89)
                            .addComponent(lbl_MemberNameCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel90)
                            .addComponent(lbl_DateReturnCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(lbl_BookNameCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_MemberIdCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Books To be Returned", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel21.setOpaque(false);

        lbl_bookCountCirculation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bt_DeatailsCirculation.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_DeatailsCirculation.setText("More");
        bt_DeatailsCirculation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_DeatailsCirculation.setMaximumSize(new java.awt.Dimension(60, 25));
        bt_DeatailsCirculation.setMinimumSize(new java.awt.Dimension(60, 25));
        bt_DeatailsCirculation.setPreferredSize(new java.awt.Dimension(60, 25));
        bt_DeatailsCirculation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_DeatailsCirculationActionPerformed(evt);
            }
        });
        bt_DeatailsCirculation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_DeatailsCirculationKeyPressed(evt);
            }
        });

        jLabel97.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel97.setText("Number of books to be Return ");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel97)
                .addGap(36, 36, 36)
                .addComponent(lbl_bookCountCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(bt_DeatailsCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lbl_bookCountCirculation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel97)
                            .addGap(8, 8, 8)))
                    .addComponent(bt_DeatailsCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bt_SaveCirculation.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_SaveCirculation.setText("Save");
        bt_SaveCirculation.setAutoscrolls(true);
        bt_SaveCirculation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_SaveCirculation.setMargin(new java.awt.Insets(4, 18, 4, 18));
        bt_SaveCirculation.setMaximumSize(new java.awt.Dimension(70, 25));
        bt_SaveCirculation.setMinimumSize(new java.awt.Dimension(70, 25));
        bt_SaveCirculation.setPreferredSize(new java.awt.Dimension(70, 25));
        bt_SaveCirculation.setSelected(true);
        bt_SaveCirculation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SaveCirculationActionPerformed(evt);
            }
        });
        bt_SaveCirculation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_SaveCirculationKeyPressed(evt);
            }
        });

        bt_CancelCirculation.setFont(new java.awt.Font("Tahoma", 0, 12));
        bt_CancelCirculation.setText("Cancel");
        bt_CancelCirculation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_CancelCirculation.setDefaultCapable(false);
        bt_CancelCirculation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_CancelCirculationActionPerformed(evt);
            }
        });
        bt_CancelCirculation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_CancelCirculationKeyPressed(evt);
            }
        });

        lbl_ErrorBookCirculation.setFont(new java.awt.Font("Tahoma", 0, 12));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lbl_ErrorBookCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_SaveCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_CancelCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt_SaveCirculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_CancelCirculation))
                    .addComponent(lbl_ErrorBookCirculation, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_BookIdCirculationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_BookIdCirculationFocusLost

        if(this.testMandatoryInSubscribeBook())
            ColourMessage("Please enter Valid 'Book Id'",0,lbl_ErrorBookCirculation);
        else {

            String bookId=txt_BookIdCirculation.getText();
            ResultSet rb=querymanager.checkAvailabilityOfbook(bookId);
            this.CheckAvailabiltyOfbook(rb);


            //ColourMessage("",0,lbl_ErrorBookCirculation);
        }
}//GEN-LAST:event_txt_BookIdCirculationFocusLost

    private void txt_MemberIdCirculationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_MemberIdCirculationFocusLost
        boolean mandatory=false;
        try {
            int memberId=Integer.parseInt(txt_MemberIdCirculation.getText());
        } catch(Exception e) {
            mandatory=true;
        }
        if(mandatory)
            ColourMessage("Please enter valid 'Member Id'",0,lbl_ErrorBookCirculation);
        else {
            String MemberId=txt_MemberIdCirculation.getText();
            ResultSet rs=querymanager.SearchMember(MemberId,1);
            Member m=this.getValuesFromMemberResultSet(rs);
            if(m.getFirstName()!=null) {
                lbl_MemberNameCirculation.setText(m.getFirstName()+" "+m.getLastName());
                Calendar calendar=Calendar.getInstance();
                calendar.add(Calendar.DATE,15);
                lbl_DateReturnCirculation.setText(calendar.get(Calendar.DATE)+"-"+(calendar.get(Calendar.MONTH)+1)+"-"+calendar.get(Calendar.YEAR));
                ResultSet rb= querymanager. NumberOfBookToBeReturned(MemberId);
                this.getValuesFromCirculationResultSet(rb);
                ColourMessage("",0,lbl_ErrorBookCirculation);
            } else {
                ColourMessage("Invalid user Id", 0,lbl_ErrorBookCirculation);
                ColourMessage("",0,lbl_bookCountCirculation);
            }
        }
}//GEN-LAST:event_txt_MemberIdCirculationFocusLost
  private void setValuesInBooksToBeReturnTable(ResultSet rs)       {
        try
        {
                int i=0;
                while (rs.next())
                {
                    bookReturnTable.setValueAt(rs.getString("bookid"), i, 0);
                    bookReturnTable.setValueAt(rs.getString("bookname"), i, 1);
                    bookReturnTable.setValueAt(rs.getString("userid"), i, 2);
                    bookReturnTable.setValueAt(rs.getString("date"), i, 3);
                    System.out.println(rs.getString("bookid")+rs.getString("bookname")+rs.getString("userid")+rs.getString("date"));
                    i++;
                }
                rs.close();

        }catch(Exception e)
        {
               System.out.println("In St Value ZTable");
               System.out.println(e.getMessage());
        }

    }
    private void bt_DeatailsCirculationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_DeatailsCirculationActionPerformed
        if(lbl_bookCountCirculation.getText().equals("0") || lbl_bookCountCirculation.getText().equals(""))
            ReturnBookDetails.setVisible(false);
        else {

            String memberId=txt_MemberIdCirculation.getText();
            // ResultSet rb= querymanager. NumberOfBookToBeReturned(memberId);
            ResultSet rs=querymanager.ReturnBookDetails(memberId);
            this.setValuesInBooksToBeReturnTable(rs);
            ReturnBookDetails.setVisible(true);

        }
}//GEN-LAST:event_bt_DeatailsCirculationActionPerformed

    private void bt_DeatailsCirculationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_DeatailsCirculationKeyPressed
        if(lbl_bookCountCirculation.getText().equals("0") || lbl_bookCountCirculation.getText().equals(""))
            ReturnBookDetails.setVisible(false);
        else {

            String memberId=txt_MemberIdCirculation.getText();
            //ResultSet rb= querymanager. NumberOfBookToBeReturned(memberId);
            ResultSet rs=querymanager.ReturnBookDetails(memberId);
            this.setValuesInBooksToBeReturnTable(rs);
            ReturnBookDetails.setVisible(true);

        }
    }//GEN-LAST:event_bt_DeatailsCirculationKeyPressed

    private void bt_SaveCirculationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SaveCirculationActionPerformed
        if(this.testMandatoryInBookCirculation()) {
            this.ColourMessage("Some of the mandatory fields were not filled. Please review your input",0,lbl_ErrorBookCirculation);
        } else {
            Circulation circulation = this.getvaluesFromBookCirculation();
            int Val=querymanager.ImportCirculation(circulation);
            circulation=null;
            this.setBlankOnCirculationWindow();
            this.ColourMessage("Succesfully subscribed", 1, lbl_ErrorBookCirculation);

        }
}//GEN-LAST:event_bt_SaveCirculationActionPerformed
private boolean testMandatoryInBookCirculation()                   {
                   boolean mandatory=false;
                   if(txt_BookIdCirculation.getText().equals(""))
                       mandatory=true;
                   if(txt_MemberIdCirculation.getText().equals(""))
                       mandatory=true;
                   return mandatory;
       }
    private void bt_SaveCirculationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_SaveCirculationKeyPressed
        if(this.testMandatoryInBookCirculation()) {
            this.ColourMessage("Some of the mandatory fields were not filled. Please review your input",0,lbl_ErrorBookCirculation);
        } else {
            Circulation circulation = this.getvaluesFromBookCirculation();
            int Val=querymanager.ImportCirculation(circulation);
            circulation=null;
            this.setBlankOnCirculationWindow();
            this.ColourMessage("Succesfully subscribed", 1, lbl_ErrorBookCirculation);

        }
}//GEN-LAST:event_bt_SaveCirculationKeyPressed

    private void bt_CancelCirculationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_CancelCirculationActionPerformed
        lmmp.showHomePanel();
        this.setBlankOnCirculationWindow();
        lbl_ErrorBookCirculation.setText("");
}//GEN-LAST:event_bt_CancelCirculationActionPerformed

    private void bt_CancelCirculationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_CancelCirculationKeyPressed
        lmmp.showHomePanel();
        this.setBlankOnCirculationWindow();
        lbl_ErrorBookCirculation.setText("");
}//GEN-LAST:event_bt_CancelCirculationKeyPressed

    private void bt_OkInBookReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_OkInBookReturnActionPerformed
        ReturnBookDetails.setVisible(false);
        this.clearTable(bookReturnTable,bookReturnTable.getRowCount(),bookReturnTable.getColumnCount());
}//GEN-LAST:event_bt_OkInBookReturnActionPerformed
 private Circulation  getvaluesFromBookCirculation()                       {
                  Circulation circulation=new Circulation();
                  circulation.setBookId(txt_BookIdCirculation.getText());
                  circulation.setUserId(txt_MemberIdCirculation.getText());
                  circulation.setDate(this.getCurrentDate());
                  Calendar calendar=Calendar.getInstance();
                  calendar.add(Calendar.DATE,15);
                  circulation.setReturnDate(""+calendar.get(Calendar.YEAR)+"-"+(calendar.get(Calendar.MONTH)+1)+"-"+(calendar.get(Calendar.DATE)));

                  circulation.setIsReturned("0");
                  return circulation;
       }
    private void bt_OkInBookReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_OkInBookReturnKeyPressed
        if(lbl_bookCountCirculation.getText().equals("0") || lbl_bookCountCirculation.getText().equals(""))
            ReturnBookDetails.setVisible(false);
        else {

            String memberId=txt_MemberIdCirculation.getText();
            // ResultSet rb= querymanager. NumberOfBookToBeReturned(memberId);
            ResultSet rs=querymanager.ReturnBookDetails(memberId);
            this.setValuesInBooksToBeReturnTable(rs);
            ReturnBookDetails.setVisible(true);

        }
}//GEN-LAST:event_bt_OkInBookReturnKeyPressed

    private void txt_MemberIdCirculationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MemberIdCirculationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MemberIdCirculationActionPerformed
  private Member getValuesFromMemberResultSet(ResultSet rs)          {
            Member m=new Member();
            try
            {
                int i=0;
                while (rs.next())
                {
                    m.setFirstName(rs.getString("memberfname"));
                    m.setLastName(rs.getString("memberlname"));
                    i++;
                }
                rs.close();
                lbl_bookCountCirculation.setText(""+i);
            }catch(Exception e)
            {
                e.printStackTrace();
            }

            return m;
        }
    private String getCurrentDate()                                      {
           Date date=new Date();
           String Output=null;
           SimpleDateFormat formater=new SimpleDateFormat("yyyy.MM.dd");
           Output=formater.format(date);
           return Output;

       }
     private Circulation getValuesFromCirculationResultSet(ResultSet rs){
           Circulation circulation=new Circulation();
           try
           {
               int i=0;
               while(rs.next())
               {
                   circulation.setBookId(rs.getString("bookid"));
                   circulation.setUserId(rs.getString("userid"));
                   i++;
               }
               rs.close();
               if(i==0)
                 ColourMessage(""+i, 1, lbl_bookCountCirculation);
               else
                 ColourMessage(""+i, 0, lbl_bookCountCirculation);
           }
           catch(Exception e)
           {
               e.printStackTrace();
           }
           return circulation;
       }
       private void ColourMessage(String msg,int msgType,JLabel lbl)        {
                switch(msgType)
                {
                            case 0:
                                        lbl.setForeground(Color.red);
                                        lbl.setText(msg);
                                        break;
                            case 1:
                                        lbl.setForeground(Color.BLUE);
                                        lbl.setText(msg);

                }
    }
       private void clearTable(JTable tablename,int rowcount,int columcount){
        for(int i=0;i<rowcount;i++)
        for(int j=0;j<columcount;j++)
            tablename.setValueAt("",i, j);

    }
         private void CheckAvailabiltyOfbook(ResultSet rb){
         
           try
            {
                if(!rb.next())
                    ColourMessage("There is no Book",0,lbl_ErrorBookCirculation );
                else
                {
                do
                {

                     lbl_BookNameCirculation.setText(rb.getString("bookname"));

                }while(rb.next());
                }




            }
            catch(Exception e)
            {
            }
       }
 private boolean testMandatoryInSubscribeBook(){
               boolean mandatory=false;
               try
               {
                        int Id=Integer.parseInt(txt_BookIdCirculation.getText());
               }
               catch(Exception e)
               {
                        mandatory =true;
               }
               return mandatory;
       }
   private void setBlankOnCirculationWindow()                       {
           txt_BookIdCirculation.setText("");lbl_BookNameCirculation.setText("");txt_MemberIdCirculation.setText("");
           lbl_MemberNameCirculation.setText("");lbl_DateReturnCirculation.setText("");lbl_bookCountCirculation.setText("");
       }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ReturnBookDetails;
    public javax.swing.JTable bookReturnTable;
    private javax.swing.JButton bt_CancelCirculation;
    private javax.swing.JButton bt_DeatailsCirculation;
    private javax.swing.JButton bt_OkInBookReturn;
    private javax.swing.JButton bt_SaveCirculation;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JLabel lbl_BookNameCirculation;
    private javax.swing.JLabel lbl_DateReturnCirculation;
    private javax.swing.JLabel lbl_ErrorBookCirculation;
    private javax.swing.JLabel lbl_MemberNameCirculation;
    private javax.swing.JLabel lbl_bookCountCirculation;
    private javax.swing.JTextField txt_BookIdCirculation;
    private javax.swing.JTextField txt_MemberIdCirculation;
    // End of variables declaration//GEN-END:variables

}
